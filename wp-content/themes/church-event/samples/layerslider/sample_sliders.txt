[{"properties":{"title":"Sample video gallery slider","width":"960","height":"540","responsive":"on","responsiveunder":"0","sublayercontainer":"0","autostart":"on","firstlayer":"1","twowayslideshow":"on","loops":"0","forceloopnum":"on","autoplayvideos":"on","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","keybnav":"on","touchnav":"on","skin":"borderlessdark","backgroundcolor":"transparent","backgroundimage":"","sliderstyle":"","navprevnext":"on","navstartstop":"on","navbuttons":"on","hoverprevnext":"on","thumb_nav":"hover","thumb_width":"100","thumb_height":"60","thumb_container_width":"60%","thumb_active_opacity":"35","thumb_inactive_opacity":"100","imgpreload":"on","yourlogo":"","yourlogostyle":"","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) { }","cbstart":"function(data) { }","cbstop":"function(data) { }","cbpause":"function(data) { }","cbanimstart":"function(data) { }","cbanimstop":"function(data) { }","cbprev":"function(data) { }","cbnext":"function(data) { }"},"layers":[{"properties":{"background":"","slidedirection":"top","slidedelay":"4000","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","id":"","deeplink":"","thumbnail":""},"sublayers":[{"subtitle":"Sublayer #1","type":"div","image":"","html":"<iframe width=\\\"960\\\" height=\\\"540\\\" src=\\\"http:\/\/www.youtube.com\/embed\/1iIZeIy7TqM\\\" frameborder=\\\"0\\\" allowfullscreen><\/iframe>","slidedirection":"auto","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","slideoutdirection":"auto","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","level":"0","showuntil":"0","url":"","target":"_self","top":"0","left":"0","style":"","id":"","class":"","title":"","alt":""}]},{"properties":{"background":"","slidedirection":"top","slidedelay":"4000","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","id":"","deeplink":"","thumbnail":""},"sublayers":[{"subtitle":"Sublayer #1","type":"div","image":"","html":"<iframe src=\\\"http:\/\/player.vimeo.com\/video\/10090962?badge=0\\\" width=\\\"960\\\" height=\\\"540\\\" frameborder=\\\"0\\\" webkitAllowFullScreen mozallowfullscreen allowFullScreen><\/iframe>","slidedirection":"auto","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","slideoutdirection":"auto","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","level":"0","showuntil":"0","url":"","target":"_self","top":"0","left":"0","style":"","id":"","class":"","title":"","alt":""}]},{"properties":{"background":"","slidedirection":"top","slidedelay":"4000","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","id":"","deeplink":"","thumbnail":""},"sublayers":[{"subtitle":"Sublayer #1","type":"div","image":"","html":"<iframe src=\\\"http:\/\/player.vimeo.com\/video\/21206637?badge=0\\\" width=\\\"960\\\" height=\\\"540\\\" frameborder=\\\"0\\\" webkitAllowFullScreen mozallowfullscreen allowFullScreen><\/iframe>","slidedirection":"auto","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","slideoutdirection":"auto","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","level":"0","showuntil":"0","url":"","target":"_self","top":"0","left":"0","style":"","id":"","class":"","title":"","alt":""}]}]},{"properties":{"post_taxonomy":"0","post_orderby":"date","post_order":"DESC","post_offset":"-1","title":"Sample full-width slider with old and new transitions","width":"100%","height":"400","maxwidth":"","forceresponsive":"on","responsiveunder":"940","sublayercontainer":"900","autostart":"on","firstlayer":"1","animatefirstlayer":"on","keybnav":"on","touchnav":"on","loops":"0","forceloopnum":"on","twowayslideshow":"on","skin":"fullwidth","backgroundcolor":"","backgroundimage":"","sliderstyle":"margin-bottom: 0px;","navprevnext":"on","navstartstop":"on","navbuttons":"on","thumb_nav":"hover","thumb_container_width":"60%","thumb_width":"100","thumb_height":"60","thumb_active_opacity":"35","thumb_inactive_opacity":"100","autoplayvideos":"on","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","imgpreload":"on","yourlogoId":"","yourlogo":"","yourlogostyle":"left: -10px; top: -10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) { }","cbstart":"function(data) { }","cbstop":"function(data) { }","cbpause":"function(data) { }","cbanimstart":"function(data) { }","cbanimstop":"function(data) { }","cbprev":"function(data) { }","cbnext":"function(data) { }"},"layers":[{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7240","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/02\/slider_video_bg.jpg","thumbnailId":"","thumbnail":"","slidedelay":"7000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"\\\"This is a...\\\"","media":"text","type":"p","imageId":"","image":"","html":"This is a full-width slider which will automatically switch into responsive mode if you reduce your browser size under 940px.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"3000\\\",\\\"delayin\\\":\\\"1000\\\",\\\"easingin\\\":\\\"easeOutElastic\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"left\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"750\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInBack\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"650px\\\",\\\"height\\\":\\\"80px\\\",\\\"padding-top\\\":\\\"0px\\\",\\\"padding-right\\\":\\\"10px\\\",\\\"padding-bottom\\\":\\\"0px\\\",\\\"padding-left\\\":\\\"10px\\\",\\\"font-family\\\":\\\"\\'HelveticaNeue-Light\\', \\'Helvetica Neue Light\\', Helvetica, Arial, sans-serif\\\",\\\"font-size\\\":\\\"22px\\\",\\\"line-height\\\":\\\"40px\\\",\\\"color\\\":\\\"black\\\",\\\"background\\\":\\\"white\\\",\\\"border-radius\\\":\\\"4px\\\"}","top":"240","left":"50%","wordwrap":"on","style":"box-shadow: 0px 4px 10px -5px black; text-shadow: none; font-weight: normal; opacity: .9; text-align: center;","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,51,52,53,54,55,56,68,69,70,71,72,73,74,75,76,77,78,83,84,85,86,94,95,96,97,98,99,100","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7213","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/01\/portfolio_bg.jpg","thumbnailId":"","thumbnail":"","slidedelay":"6000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"\\\"These text sublayers...\\\"","media":"text","type":"p","imageId":"","image":"","html":"These text sublayers are positioned into a centered, 900px wide, but responsive container.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1500\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"bottom\\\",\\\"durationout\\\":\\\"750\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"height\\\":\\\"40px\\\",\\\"padding-top\\\":\\\"0px\\\",\\\"padding-right\\\":\\\"10px\\\",\\\"padding-bottom\\\":\\\"0px\\\",\\\"padding-left\\\":\\\"10px\\\",\\\"font-family\\\":\\\"\\'HelveticaNeue-Light\\', \\'Helvetica Neue Light\\', Helvetica, Arial, sans-serif\\\",\\\"font-size\\\":\\\"22px\\\",\\\"line-height\\\":\\\"40px\\\",\\\"color\\\":\\\"white\\\",\\\"background\\\":\\\"black\\\",\\\"border-radius\\\":\\\"4px\\\"}","top":"30","left":"0","style":"box-shadow: 0px 4px 10px -5px black; text-shadow: none; font-weight: normal; opacity: .65;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"\\\"With this feature...\\\"","media":"text","type":"p","imageId":"","image":"","html":"With this feature you can create full-width sliders with content aligned to your page.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1500\\\",\\\"delayin\\\":\\\"500\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"bottom\\\",\\\"durationout\\\":\\\"750\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"height\\\":\\\"40px\\\",\\\"padding-top\\\":\\\"0px\\\",\\\"padding-right\\\":\\\"10px\\\",\\\"padding-bottom\\\":\\\"0px\\\",\\\"padding-left\\\":\\\"10px\\\",\\\"font-family\\\":\\\"\\'HelveticaNeue-Light\\', \\'Helvetica Neue Light\\', Helvetica, Arial, sans-serif\\\",\\\"font-size\\\":\\\"22px\\\",\\\"line-height\\\":\\\"40px\\\",\\\"color\\\":\\\"white\\\",\\\"background\\\":\\\"black\\\",\\\"border-radius\\\":\\\"4px\\\"}","top":"73","left":"0","style":"box-shadow: 0px 4px 10px -5px black; text-shadow: none; font-weight: normal; opacity: .65;","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"all","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7239","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/02\/slider_shop_bg_big.jpg","thumbnailId":"","thumbnail":"","slidedelay":"7000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Sublayer #1","media":"text","type":"p","imageId":"","image":"","html":"To position a sublayer into the absolute center, add 50% to the left and top fields.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"750\\\",\\\"delayin\\\":\\\"1000\\\",\\\"easingin\\\":\\\"easeOutBack\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"top\\\",\\\"durationout\\\":\\\"750\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInBack\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"height\\\":\\\"40px\\\",\\\"padding-top\\\":\\\"0px\\\",\\\"padding-right\\\":\\\"10px\\\",\\\"padding-bottom\\\":\\\"0px\\\",\\\"padding-left\\\":\\\"10px\\\",\\\"font-family\\\":\\\"\\'HelveticaNeue-Light\\', \\'Helvetica Neue Light\\', Helvetica, Arial, sans-serif\\\",\\\"font-size\\\":\\\"22px\\\",\\\"line-height\\\":\\\"40px\\\",\\\"color\\\":\\\"black\\\",\\\"background\\\":\\\"white\\\",\\\"border-radius\\\":\\\"4px\\\"}","top":"50%","left":"50%","style":"box-shadow: 0px 4px 10px -5px black; text-shadow: none; font-weight: normal; opacity: .9;","id":"","class":"","title":"","alt":"","rel":""}]}]},{"properties":{"post_taxonomy":"0","post_orderby":"date","post_order":"DESC","post_offset":"-1","title":"Slider home shop","width":"100%","height":"530","responsive":"on","maxwidth":"","forceresponsive":"on","responsiveunder":"1130","sublayercontainer":"1130","autostart":"on","pauseonhover":"on","firstlayer":"1","animatefirstlayer":"on","keybnav":"on","touchnav":"on","loops":"2","forceloopnum":"on","twowayslideshow":"on","skin":"fullwidth","backgroundcolor":"#ffffff","backgroundimage":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_shop_bg_big.jpg","sliderstyle":"margin-bottom: 0px;","navprevnext":"on","navbuttons":"on","circletimer":"on","thumb_nav":"disabled","thumb_container_width":"940","thumb_width":"150","thumb_height":"85","thumb_active_opacity":"100","thumb_inactive_opacity":"10","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","imgpreload":"on","yourlogoId":"","yourlogo":"","yourlogostyle":"left: 10px; top: 10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) { }","cbstart":"function(data) { }","cbstop":"function(data) { }","cbpause":"function(data) { }","cbanimstart":"function(data) { }","cbanimstop":"function(data) { }","cbprev":"function(data) { }","cbnext":"function(data) { }"},"layers":[{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"","background":"","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"product","media":"img","type":"p","imageId":"7195","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_shop_product1.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.5\\\",\\\"scaleyin\\\":\\\"1.5\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"66px","left":"144px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"Claritas est etiam processus dynamicus, <br\/>\r\nqui sequitur mutationem consuetudium lectorum. ","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"800\\\",\\\"delayin\\\":\\\"600\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"14px\\\",\\\"line-height\\\":\\\"20px\\\"}","top":"285px","left":"645px","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"H1","media":"text","type":"h1","imageId":"","image":"","html":"Home made strawberry jam","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"top\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"40px\\\",\\\"line-height\\\":\\\"38px\\\",\\\"color\\\":\\\"#D14D42\\\"}","top":"178px","left":"639px","wordwrap":"on","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Button 2","media":"html","type":"div","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 18px;\\\" class=\\\"button vamtam-button accent1  button-filled hover-accent2 \\\"><span class=\\\"btext\\\">View all<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"350\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"415px","left":"795px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"line","media":"img","type":"p","imageId":"","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/10\/line.gif","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"260\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"800\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"370px","left":"685px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"$60 Only!","media":"text","type":"h3","imageId":"","image":"","html":"<i>$60<\/I>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"505\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"padding-right\\\":\\\"10px\\\",\\\"padding-left\\\":\\\"10px\\\",\\\"font-size\\\":\\\"36px\\\",\\\"color\\\":\\\"#7a7a7a\\\",\\\"background\\\":\\\"#eeeeee\\\",\\\"border-radius\\\":\\\"4\\\"}","top":"350px","left":"800px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"shadow","media":"img","type":"p","imageId":"6733","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2013\/11\/l10.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"68px","left":"772px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"85","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"","background":"","thumbnailId":"","thumbnail":"","slidedelay":"10000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"shadow","media":"img","type":"p","imageId":"7159","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/shadow.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1300\\\",\\\"delayin\\\":\\\"200\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"457px","left":"158px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"Claritas est etiam processus dynamicus, <br\/>\r\nqui sequitur mutationem consuetudium lectorum. ","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"800\\\",\\\"delayin\\\":\\\"600\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"14px\\\",\\\"line-height\\\":\\\"20px;\\\"}","top":"285px","left":"645px","wordwrap":"on","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Button 1","media":"html","type":"div","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 18px;\\\" class=\\\"button vamtam-button accent1  button-filled hover-accent2 \\\"><span class=\\\"btext\\\">Shop now<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"300\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"415px","left":"782px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"H1","media":"text","type":"h1","imageId":"","image":"","html":"See our new <\/br>\r\nVintage colections","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"top\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"40px\\\",\\\"line-height\\\":\\\"38px\\\",\\\"color\\\":\\\"#D14D42\\\"}","top":"180px","left":"645px","wordwrap":"on","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"line","media":"img","type":"p","imageId":"","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/10\/line.gif","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"260\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"800\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"370px","left":"685px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"product 1","media":"img","type":"p","imageId":"7155","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/Slider-shop1.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"200\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"bottom\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"10px","left":"190px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"product 2","media":"img","type":"p","imageId":"7156","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/Slider-shop2.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"3300\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.5\\\",\\\"scaleyin\\\":\\\"0.5\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"bottom\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"10px","left":"190px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"product 3","media":"img","type":"p","imageId":"7157","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/Slider-shop3.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"5500\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.5\\\",\\\"scaleyin\\\":\\\"0.5\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"bottom\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"10px","left":"190px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"product 4","media":"img","type":"p","imageId":"7158","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/Slider-shop4.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"7500\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.5\\\",\\\"scaleyin\\\":\\\"0.5\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"bottom\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"10px","left":"190px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #10","media":"img","type":"p","imageId":"6644","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2013\/04\/dribbble-logo-graph-dnld-0844db41917ca1514765c88277f99757.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"82px","left":"744px","style":"","id":"","class":"","title":"","alt":"","rel":""}]}]},{"properties":{"post_type":["wysijap"],"post_categories":["1"],"post_tags":["380"],"post_taxonomy":"0","post_orderby":"date","post_order":"DESC","post_offset":"-1","title":"Home Slider","width":"100%","height":"700px","responsive":"on","maxwidth":"","forceresponsive":"on","responsiveunder":"1130","sublayercontainer":"1200","autostart":"on","pauseonhover":"on","firstlayer":"1","animatefirstlayer":"on","keybnav":"on","touchnav":"on","loops":"0","forceloopnum":"on","skin":"v5","backgroundcolor":"#3E4043","backgroundimage":"","sliderstyle":"margin-bottom: 0px;","navprevnext":"on","navbuttons":"on","hoverprevnext":"on","thumb_nav":"disabled","thumb_container_width":"60%","thumb_width":"100","thumb_height":"60","thumb_active_opacity":"35","thumb_inactive_opacity":"100","autoplayvideos":"on","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","imgpreload":"on","lazyload":"on","yourlogoId":"","yourlogo":"","yourlogostyle":"left: -10px; top: -10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) {\r\n\r\n}","cbstart":"function(data) {\r\n\r\n}","cbstop":"function(data) {\r\n\r\n}","cbpause":"function(data) {\r\n\r\n}","cbanimstart":"function(data) {\r\n\r\n}","cbanimstop":"function(data) {\r\n\r\n}","cbprev":"function(data) {\r\n\r\n}","cbnext":"function(data) {\r\n\r\n}"},"layers":[{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"103","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"6907","background":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/slider-photo1.jpg","thumbnailId":"","thumbnail":"","slidedelay":"7000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"God","media":"text","type":"h1","imageId":"","image":"","html":"GOD","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-40\\\",\\\"offsetyin\\\":\\\"40\\\",\\\"durationin\\\":\\\"600\\\",\\\"delayin\\\":\\\"300\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.8\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0.1\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"80px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"194px","left":"20px","wordwrap":"on","style":"letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"IS IN NATURE,","media":"text","type":"h1","imageId":"","image":"","html":"IS IN NATURE,","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-10\\\",\\\"offsetyin\\\":\\\"-10\\\",\\\"durationin\\\":\\\"700\\\",\\\"delayin\\\":\\\"800\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.8\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0.1\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"80px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"270px","left":"20px","wordwrap":"on","style":"letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"LOVE IT!","media":"text","type":"h1","imageId":"","image":"","html":"LOVE IT!","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-10\\\",\\\"offsetyin\\\":\\\"-10\\\",\\\"durationin\\\":\\\"700\\\",\\\"delayin\\\":\\\"1300\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.8\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0.1\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"80px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"350px","left":"20px","wordwrap":"on","style":"letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"sub title","media":"text","type":"p","imageId":"","image":"","html":"Claritas est etiam processus dynamicus, <br\/>\r\nqui sequitur mutationem consuetudium lectorum.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"2900\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-family\\\":\\\"Raleway\\\",\\\"font-size\\\":\\\"20px\\\",\\\"line-height\\\":\\\"23px\\\",\\\"color\\\":\\\"#E7D09C\\\"}","top":"455px","left":"20px","wordwrap":"on","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"button","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 18px;\\\" class=\\\"button vamtam-button accent1  button-filled hover-accent2 \\\"><span class=\\\"btext\\\">Join us<\/span><\/a>\r\n","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-100\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"900\\\",\\\"delayin\\\":\\\"3200\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.6\\\",\\\"scaleyin\\\":\\\"0.6\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-family\\\":\\\"Raleway\\\",\\\"font-size\\\":\\\"20px\\\",\\\"line-height\\\":\\\"23px\\\",\\\"color\\\":\\\"#E7D09C\\\"}","top":"535px","left":"20px","wordwrap":"on","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"food2","media":"img","type":"p","imageId":"7011","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/food2.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"200\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"1300\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"-7\\\"}","url":"","target":"_self","styles":"{}","top":"531px","left":"751px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"woman","media":"img","type":"p","imageId":"7015","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/woman1.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"200\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"1200\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"200\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"-59px","left":"591px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"food1","media":"img","type":"p","imageId":"7010","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/food1.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"1600\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"2\\\"}","url":"","target":"_self","styles":"{}","top":"244px","left":"1057px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"103","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7239","background":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_shop_bg_big.jpg","thumbnailId":"","thumbnail":"","slidedelay":"9000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"product 2","media":"img","type":"p","imageId":"7203","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_shop_product3.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1100\\\",\\\"delayin\\\":\\\"3700\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.7\\\",\\\"scaleyin\\\":\\\"0.7\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"200\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"216px","left":"435px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"product 3","media":"img","type":"p","imageId":"7204","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_shop_product2.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1100\\\",\\\"delayin\\\":\\\"3700\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.7\\\",\\\"scaleyin\\\":\\\"0.7\\\",\\\"offsetxout\\\":\\\"80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"200\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"214px","left":"16px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Product","media":"img","type":"p","imageId":"7195","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_shop_product1.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"bottom\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1600\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"141px","left":"158px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"logo","media":"img","type":"p","imageId":"6733","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2013\/11\/l10.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"90\\\",\\\"durationin\\\":\\\"1500\\\",\\\"delayin\\\":\\\"1300\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"80\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"142px","left":"880px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"title","media":"text","type":"h1","imageId":"","image":"","html":"Home made strawberry jam","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"20\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"500\\\",\\\"easingin\\\":\\\"easeInOutElastic\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"20\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"40px\\\",\\\"line-height\\\":\\\"38px\\\",\\\"color\\\":\\\"#D14D42\\\"}","top":"256px","left":"757px","wordwrap":"on","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"subtitle","media":"text","type":"p","imageId":"","image":"","html":"Claritas est etiam processus dynamicus, <br\/>\r\nqui sequitur mutationem consuetudium lectorum. ","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"-10\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"1500\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"-10\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"14px\\\",\\\"line-height\\\":\\\"20px\\\"}","top":"361px","left":"756px","wordwrap":"on","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"line","media":"img","type":"p","imageId":"6531","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2013\/10\/line.gif","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"3000\\\",\\\"delayin\\\":\\\"1200\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"-2\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"454px","left":"797px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"price","media":"text","type":"h3","imageId":"","image":"","html":"<i>$60<\/I>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"2100\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"padding-right\\\":\\\"10px\\\",\\\"padding-left\\\":\\\"10px\\\",\\\"font-size\\\":\\\"36px\\\",\\\"color\\\":\\\"#7a7a7a\\\",\\\"background\\\":\\\"#eeeeee\\\",\\\"border-radius\\\":\\\"4px\\\"}","top":"435px","left":"916px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"button","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 18px;\\\" class=\\\"button vamtam-button accent1  button-filled hover-accent2 \\\"><span class=\\\"btext\\\">Shop now<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"20\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"2500\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"20\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0\\\",\\\"scaleyout\\\":\\\"0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"505px","left":"905px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"103","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7240","background":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/02\/slider_video_bg.jpg","thumbnailId":"","thumbnail":"","slidedelay":"5000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"people","media":"img","type":"p","imageId":"7009","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/people.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-10\\\",\\\"offsetyin\\\":\\\"80\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"100\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-10\\\",\\\"offsetyout\\\":\\\"80\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{}","top":"133px","left":"50%","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Title","media":"text","type":"h1","imageId":"","image":"","html":"PARALLAX","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-200\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"1000\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.8\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"30\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.6\\\",\\\"scaleyout\\\":\\\"0.6\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"900px\\\",\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"80px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"300px","left":"50%","wordwrap":"on","style":"letter-space: 5px; text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Title copy","media":"text","type":"h1","imageId":"","image":"","html":"FOR YOUR MESSAGE!","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"200\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"1000\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.8\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"30\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"0.8\\\",\\\"scaleyout\\\":\\\"0.8\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"900px\\\",\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"80px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"380px","left":"50%","wordwrap":"on","style":"letter-space: 5px; text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"sub title","media":"text","type":"p","imageId":"","image":"","html":"Claritas est etiam processus dynamicus, <br\/>\r\nqui sequitur mutationem consuetudium lectorum.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"80\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"2000\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.6\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-family\\\":\\\"Raleway\\\",\\\"font-size\\\":\\\"20px\\\",\\\"line-height\\\":\\\"23px\\\",\\\"color\\\":\\\"#E7D09C\\\"}","top":"480px","left":"50%","wordwrap":"on","style":" text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"img","type":"p","imageId":"7007","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/cloud1.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"300\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"0\\\",\\\"offsetyout\\\":\\\"30\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"15\\\"}","url":"","target":"_self","styles":"{}","top":"406px","left":"38%","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #6","media":"img","type":"p","imageId":"7008","image":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/cloud2.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"400\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"1\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"3\\\"}","url":"","target":"_self","styles":"{}","top":"533px","left":"53%","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Button","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 18px;\\\" class=\\\"button vamtam-button accent1  button-filled hover-accent2 \\\"><span class=\\\"btext\\\">Join us<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"80\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"2400\\\",\\\"easingin\\\":\\\"easeOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0.6\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\"}","top":"560px","left":"50%","wordwrap":"on","style":"text-align:center;","id":"","class":"","title":"","alt":"","rel":""}]}]},{"properties":{"post_type":["wysijap"],"post_categories":["1"],"post_tags":["380"],"post_taxonomy":"0","post_orderby":"date","post_order":"DESC","post_offset":"-1","title":"About Intro banner","width":"100%","height":"560px","responsive":"on","maxwidth":"","forceresponsive":"on","responsiveunder":"1000","sublayercontainer":"960","autostart":"on","pauseonhover":"on","firstlayer":"1","animatefirstlayer":"on","keybnav":"on","touchnav":"on","loops":"0","forceloopnum":"on","skin":"v5","backgroundcolor":"","backgroundimage":"","sliderstyle":"margin-bottom: 0px;","navprevnext":"on","navstartstop":"on","navbuttons":"on","hoverprevnext":"on","circletimer":"on","thumb_nav":"hover","thumb_container_width":"60%","thumb_width":"100","thumb_height":"60","thumb_active_opacity":"35","thumb_inactive_opacity":"100","autoplayvideos":"on","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","imgpreload":"on","lazyload":"on","yourlogoId":"","yourlogo":"","yourlogostyle":"left: -10px; top: -10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) {\r\n\r\n}","cbstart":"function(data) {\r\n\r\n}","cbstop":"function(data) {\r\n\r\n}","cbpause":"function(data) {\r\n\r\n}","cbanimstart":"function(data) {\r\n\r\n}","cbanimstop":"function(data) {\r\n\r\n}","cbprev":"function(data) {\r\n\r\n}","cbnext":"function(data) {\r\n\r\n}"},"layers":[{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7017","background":"http:\/\/church-event.vamtam.com\/\/wp-content\/uploads\/2014\/01\/about_bg.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Title 1","media":"text","type":"h1","imageId":"","image":"","html":"<span style=\\\"color: #ffffff;\\\">This theme<\/span>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"-80\\\",\\\"durationin\\\":\\\"1800\\\",\\\"delayin\\\":\\\"400\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"70px\\\"}","top":"134px","left":"165px","style":"text-align: center; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Was","media":"text","type":"h1","imageId":"","image":"","html":"<span style=\\\"color: #ffffff;\\\">was<\/span>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"2000\\\",\\\"delayin\\\":\\\"900\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"70px\\\"}","top":"135px","left":"606px","style":"text-align: center; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"created with","media":"text","type":"h1","imageId":"","image":"","html":"<span style=\\\"color: #ffffff;\\\">created with <\/span>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"-20\\\",\\\"durationin\\\":\\\"2000\\\",\\\"delayin\\\":\\\"1500\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"70px\\\"}","top":"205px","left":"240px","style":"text-align: center; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"love.","media":"text","type":"h1","imageId":"","image":"","html":"<span style=\\\"color: #ffffff;\\\">love.<\/span>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"-20\\\",\\\"durationin\\\":\\\"2000\\\",\\\"delayin\\\":\\\"2100\\\",\\\"easingin\\\":\\\"easeInOutCirc\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"80px\\\",\\\"line-height\\\":\\\"70px\\\"}","top":"278px","left":"385px","style":"text-align: center; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"We believe that this theme will serve you well and will give you a good image for young people!","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"40\\\",\\\"durationin\\\":\\\"1600\\\",\\\"delayin\\\":\\\"3200\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-family\\\":\\\"Raleway\\\",\\\"font-size\\\":\\\"20\\\",\\\"line-height\\\":\\\"23\\\",\\\"color\\\":\\\"#E7D09C\\\"}","top":"370px","left":"179px","wordwrap":"on","style":"text-align: center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"button","media":"text","type":"p","imageId":"","image":"","html":"Buy this theme","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"2500\\\",\\\"delayin\\\":\\\"3500\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"http:\/\/themeforest.net\/item\/church-and-events-responsive-wordpress-theme\/7028545","target":"_self","styles":"{\\\"padding-right\\\":\\\"20px\\\",\\\"padding-left\\\":\\\"20px\\\",\\\"font-size\\\":\\\"20px\\\"}","top":"451px","left":"394px","style":"","id":"","class":"button","title":"","alt":"","rel":""}]}]},{"properties":{"post_taxonomy":"0","post_orderby":"date","post_order":"DESC","post_offset":"-1","title":"Sample slider about page","width":"100%","height":"330","responsive":"on","maxwidth":"","responsiveunder":"1130","sublayercontainer":"1130","autostart":"on","pauseonhover":"on","firstlayer":"1","animatefirstlayer":"on","keybnav":"on","touchnav":"on","loops":"2","forceloopnum":"on","twowayslideshow":"on","skin":"fullwidth","backgroundcolor":"#383838","backgroundimage":"","sliderstyle":"margin-bottom: 0px;","navprevnext":"on","navbuttons":"on","hoverprevnext":"on","thumb_nav":"disabled","thumb_container_width":"940","thumb_width":"150","thumb_height":"85","thumb_active_opacity":"100","thumb_inactive_opacity":"10","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","imgpreload":"on","yourlogoId":"","yourlogo":"","yourlogostyle":"left: 10px; top: 10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) { }","cbstart":"function(data) { }","cbstop":"function(data) { }","cbpause":"function(data) { }","cbanimstart":"function(data) { }","cbanimstop":"function(data) { }","cbprev":"function(data) { }","cbnext":"function(data) { }"},"layers":[{"properties":{"post_offset":"-1","3d_transitions":"all","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7057","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/02\/slider_bg2.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Layer #3","media":"text","type":"h1","imageId":"","image":"","html":"Mobile Friendly.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"120\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"color\\\":\\\"#ffffff\\\"}","top":"90px","left":"50%","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","media":"text","type":"p","imageId":"","image":"","html":"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\r\n","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"150\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-size\\\":\\\"16px\\\",\\\"line-height\\\":\\\"22px\\\",\\\"color\\\":\\\"#c7c7c7\\\"}","top":"170px","left":"50%","wordwrap":"on","style":"text-align:center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #5","media":"text","type":"p","imageId":"","image":"","html":"Read More \u2192","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"170\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"#","target":"_self","styles":"{\\\"color\\\":\\\"#ffffff\\\"}","top":"230px","left":"50%","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"all","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"7056","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/02\/slider_bg1.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Layer #3","media":"text","type":"h1","imageId":"","image":"","html":"Many video tutorials.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"120\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"color\\\":\\\"#ffffff\\\"}","top":"90px","left":"50%","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","media":"text","type":"p","imageId":"","image":"","html":"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\r\n","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"150\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"600px\\\",\\\"font-size\\\":\\\"16px\\\",\\\"line-height\\\":\\\"18px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"170px","left":"266px","wordwrap":"on","style":"text-align:center;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #5","media":"text","type":"p","imageId":"","image":"","html":"Read More \u2192","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"right\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"170\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":false,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1.0\\\",\\\"scaleyin\\\":\\\"1.0\\\",\\\"offsetxout\\\":\\\"right\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"1000\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":false,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1.0\\\",\\\"scaleyout\\\":\\\"1.0\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"#","target":"_self","styles":"{\\\"color\\\":\\\"#ffffff\\\"}","top":"230px","left":"50%","style":"","id":"","class":"","title":"","alt":"","rel":""}]}]},{"properties":{"title":"Slider - logos","width":"100%","height":"170","responsive":"on","responsiveunder":"1130","sublayercontainer":"1130","pauseonhover":"on","firstlayer":"1","animatefirstlayer":"on","twowayslideshow":"on","loops":"1","forceloopnum":"on","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","keybnav":"on","touchnav":"on","skin":"fullwidth","backgroundcolor":"","backgroundimage":"","sliderstyle":"","navprevnext":"on","hoverprevnext":"on","thumb_nav":"disabled","thumb_width":"150","thumb_height":"85","thumb_container_width":"940","thumb_active_opacity":"100","thumb_inactive_opacity":"10","imgpreload":"on","yourlogo":"","yourlogostyle":"left: 10px; top: 10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) { }","cbstart":"function(data) { }","cbstop":"function(data) { }","cbpause":"function(data) { }","cbanimstart":"function(data) { }","cbanimstop":"function(data) { }","cbprev":"function(data) { }","cbnext":"function(data) { }"},"layers":[{"properties":{"3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","background":"","thumbnail":"","slidedelay":"4000","new_transitions":"on","slidedirection":"right","timeshift":"0","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Layer #1","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l5.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"23px","left":"921px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #2","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l6.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"25px","left":"711px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #3","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l91.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"22px","left":"63px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l81.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"25px","left":"498px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #5","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l71.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"24px","left":"281px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"-1px","left":"237px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br copy","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"-1px","left":"468px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br copy","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"-2px","left":"676px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br copy","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"-1px","left":"892px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","background":"","thumbnail":"","slidedelay":"4000","new_transitions":"on","slidedirection":"right","timeshift":"0","durationin":"1500","easingin":"easeInOutQuint","delayin":"0","durationout":"1500","easingout":"easeInOutQuint","delayout":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Layer #1","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l4.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"22px","left":"55px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #2","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l9.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"27px","left":"739px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #3","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l11.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"23px","left":"523px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l10.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"23px","left":"292px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #5","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/l91.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"#","target":"_self","styles":"{}","top":"24px","left":"932px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"1px","left":"249px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br copy","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"3px","left":"478px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br copy","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"2px","left":"720px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"br copy","type":"img","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2013\/11\/br.png","html":"","slidedirection":"auto","durationin":"1000","easingin":"easeInOutQuint","delayin":"0","rotatein":"0","scalein":"1.0","slideoutdirection":"auto","durationout":"1000","easingout":"easeInOutQuint","delayout":"0","rotateout":"0","scaleout":"1.0","level":"-1","showuntil":"0","url":"","target":"_self","styles":"{}","top":"2px","left":"908px","style":"","id":"","class":"","title":"","alt":"","rel":""}]}]},{"properties":{"post_type":["wysijap"],"post_categories":["1"],"post_tags":["380"],"post_taxonomy":"0","post_orderby":"date","post_order":"DESC","post_offset":"-1","title":"Home-standart","width":"100%","height":"450px","responsive":"on","maxwidth":"","forceresponsive":"on","responsiveunder":"1150","sublayercontainer":"1150","autostart":"on","pauseonhover":"on","firstlayer":"1","animatefirstlayer":"on","keybnav":"on","touchnav":"on","loops":"0","forceloopnum":"on","skin":"v5","backgroundcolor":"","backgroundimage":"","sliderstyle":"margin-bottom: 0px;","navprevnext":"on","navbuttons":"on","hoverprevnext":"on","hoverbottomnav":"on","thumb_nav":"hover","thumb_container_width":"60%","thumb_width":"100","thumb_height":"60","thumb_active_opacity":"35","thumb_inactive_opacity":"100","autoplayvideos":"on","autopauseslideshow":"auto","youtubepreview":"maxresdefault.jpg","imgpreload":"on","lazyload":"on","yourlogoId":"","yourlogo":"","yourlogostyle":"left: -10px; top: -10px;","yourlogolink":"","yourlogotarget":"_self","cbinit":"function(element) {\r\n\r\n}","cbstart":"function(data) {\r\n\r\n}","cbstop":"function(data) {\r\n\r\n}","cbpause":"function(data) {\r\n\r\n}","cbanimstart":"function(data) {\r\n\r\n}","cbanimstop":"function(data) {\r\n\r\n}","cbprev":"function(data) {\r\n\r\n}","cbnext":"function(data) {\r\n\r\n}"},"layers":[{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"22182","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/06\/slider_bg_1.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Title","media":"text","type":"h1","imageId":"","image":"","html":"For now, for this year, I need to be a good mother.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1500\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"32px\\\",\\\"line-height\\\":\\\"32px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"166px","left":"0px","wordwrap":"on","style":"text-transform: uppercase; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"Phasellus enim libero, blandit vel sapien vitae, condimentum ultricies magna et. Quisque euismod orci ut et lobortis aliquam. Aliquam in tortor enim.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1700\\\",\\\"delayin\\\":\\\"100\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"12\\\",\\\"line-height\\\":\\\"18\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"276px","left":"1px","wordwrap":"on","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 16px;\\\" class=\\\"button vamtam-button accent5 button-border hover-accent1  \\\"><span class=\\\"btext\\\">More \u2192<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"1000\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"12px\\\"}","top":"352px","left":"-3px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"22188","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/06\/slider_bg_4.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"Title","media":"text","type":"h1","imageId":"","image":"","html":"Do not let your hearts be troubled. Trust in God, trust also in me.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1500\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"500px\\\",\\\"font-size\\\":\\\"32px\\\",\\\"line-height\\\":\\\"32px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"166px","left":"0px","wordwrap":"on","style":"text-transform: uppercase; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"Phasellus enim libero, blandit vel sapien vitae, condimentum ultricies magna et. Quisque euismod orci ut et lobortis aliquam. Aliquam in tortor enim.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"-80\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1700\\\",\\\"delayin\\\":\\\"100\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"12\\\",\\\"line-height\\\":\\\"18\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"276px","left":"1px","wordwrap":"on","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 16px;\\\" class=\\\"button vamtam-button accent5 button-border hover-accent1  \\\"><span class=\\\"btext\\\">More \u2192<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"1000\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"12px\\\"}","top":"352px","left":"-3px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"22186","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/06\/slider_bg_3.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"bg trans","media":"img","type":"p","imageId":"22194","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/06\/slider_textbg_3.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"12\\\",\\\"line-height\\\":\\\"14\\\"}","top":"145px","left":"643px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Title","media":"text","type":"h1","imageId":"","image":"","html":"An ounce of mother is worth a pound of clergy.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"30\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"400\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"32px\\\",\\\"line-height\\\":\\\"32px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"172px","left":"678px","wordwrap":"on","style":"text-transform: uppercase; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"~ Spanish Proverb! Phasellus enim libero, blandit vel sapien vitae, condimentum ultricies magna et. Quisque euismod orci ut et lobortis aliquam. Aliquam in tortor enim.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"-20\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"300\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"279px","left":"679px","wordwrap":"on","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 16px;\\\" class=\\\"button vamtam-button accent5 button-border hover-accent1\\\"><span class=\\\"btext\\\">More \u2192<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"600\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"12px\\\"}","top":"349px","left":"679px","style":"","id":"","class":"","title":"","alt":"","rel":""}]},{"properties":{"post_offset":"-1","3d_transitions":"","2d_transitions":"","custom_3d_transitions":"","custom_2d_transitions":"","backgroundId":"22184","background":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/06\/slider_bg_2.jpg","thumbnailId":"","thumbnail":"","slidedelay":"4000","timeshift":"0","layer_link":"","layer_link_target":"_self","id":"","deeplink":""},"sublayers":[{"subtitle":"bg trans","media":"img","type":"p","imageId":"22192","image":"http:\/\/church-event.vamtam.com\/wp-content\/uploads\/2014\/06\/slider_textbg_2.png","html":"","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1200\\\",\\\"delayin\\\":\\\"0\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"12\\\",\\\"line-height\\\":\\\"14\\\"}","top":"145px","left":"643px","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Title","media":"text","type":"h1","imageId":"","image":"","html":"Let the one among you who is without sin be the first to cast a stone.","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"30\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"400\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"font-size\\\":\\\"32px\\\",\\\"line-height\\\":\\\"32px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"172px","left":"678px","wordwrap":"on","style":"text-transform: uppercase; letter-space: 5px;","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"text","media":"text","type":"p","imageId":"","image":"","html":"~ Jesus Christ","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"-20\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"300\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"1\\\",\\\"scaleyin\\\":\\\"1\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"width\\\":\\\"400px\\\",\\\"color\\\":\\\"#ffffff\\\"}","top":"312px","left":"679px","wordwrap":"on","style":"","id":"","class":"","title":"","alt":"","rel":""},{"subtitle":"Layer #4","media":"text","type":"p","imageId":"","image":"","html":"<a href=\\\"\/pages\/giving\/\\\" target=\\\"_self\\\" style=\\\"font-size: 16px;\\\" class=\\\"button vamtam-button accent5 button-border hover-accent1\\\"><span class=\\\"btext\\\">More \u2192<\/span><\/a>","post_text_length":"","transition":"{\\\"offsetxin\\\":\\\"0\\\",\\\"offsetyin\\\":\\\"0\\\",\\\"durationin\\\":\\\"1000\\\",\\\"delayin\\\":\\\"600\\\",\\\"easingin\\\":\\\"easeInOutQuint\\\",\\\"fadein\\\":true,\\\"rotatein\\\":\\\"0\\\",\\\"rotatexin\\\":\\\"0\\\",\\\"rotateyin\\\":\\\"0\\\",\\\"transformoriginin\\\":\\\"50% 50% 0\\\",\\\"skewxin\\\":\\\"0\\\",\\\"skewyin\\\":\\\"0\\\",\\\"scalexin\\\":\\\"0\\\",\\\"scaleyin\\\":\\\"0\\\",\\\"offsetxout\\\":\\\"-80\\\",\\\"offsetyout\\\":\\\"0\\\",\\\"durationout\\\":\\\"400\\\",\\\"showuntil\\\":\\\"0\\\",\\\"easingout\\\":\\\"easeInOutQuint\\\",\\\"fadeout\\\":true,\\\"rotateout\\\":\\\"0\\\",\\\"rotatexout\\\":\\\"0\\\",\\\"rotateyout\\\":\\\"0\\\",\\\"transformoriginout\\\":\\\"50% 50% 0\\\",\\\"skewxout\\\":\\\"0\\\",\\\"skewyout\\\":\\\"0\\\",\\\"scalexout\\\":\\\"1\\\",\\\"scaleyout\\\":\\\"1\\\",\\\"parallaxlevel\\\":\\\"0\\\"}","url":"","target":"_self","styles":"{\\\"font-size\\\":\\\"12px\\\"}","top":"349px","left":"679px","style":"","id":"","class":"","title":"","alt":"","rel":""}]}]}]